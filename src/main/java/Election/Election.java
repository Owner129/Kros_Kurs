package Election;

import java.sql.*;
import java.util.Scanner;

public class Election {
    private static final Scanner scanner = new Scanner(System.in);
    private static final String PASSWORD = "admin";

    public static class Major {
        public String surname, name, patronymic, birthplace, gender, photoPath;
        public int birthYear, indexPopularity;

        public Major(String surname, String name, String patronymic, String birthplace, String gender, int birthYear, int indexPopularity) {
            this.surname = surname;
            this.name = name;
            this.patronymic = patronymic;
            this.birthplace = birthplace;
            this.gender = gender;
            this.birthYear = birthYear;
            this.indexPopularity = indexPopularity;
            this.photoPath = gender.equalsIgnoreCase("—á") ? "images/man.jpg" : "images/woman.jpg";
        }

        public String getSurname() { return surname; }
        public String getName() { return name; }
        public String getPatronymic() { return patronymic; }
        public String getBirthplace() { return birthplace; }
        public String getGender() { return gender; }
        public int getBirthYear() { return birthYear; }
        public int getIndexPopularity() { return indexPopularity; }
        public String getPhotoPath() { return photoPath; }
    }

    private static boolean authorizeAccess() {
        System.out.print("–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥—É –≤ –ø—Ä–æ–≥—Ä–∞–º—É: ");
        String input = scanner.nextLine().trim();
        return input.equals(PASSWORD);
    }

    private static void addMajorToDB() {
        System.out.print("–ü—Ä—ñ–∑–≤–∏—â–µ: ");
        String surname = scanner.nextLine();

        System.out.print("–Ü–º‚Äô—è: ");
        String name = scanner.nextLine();

        System.out.print("–ü–æ –±–∞—Ç—å–∫–æ–≤—ñ: ");
        String patronymic = scanner.nextLine();

        System.out.print("–ú—ñ—Å—Ü–µ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è: ");
        String birthplace = scanner.nextLine();

        String gender;
        while (true) {
            System.out.print("–°—Ç–∞—Ç—å (—á/–∂): ");
            gender = scanner.nextLine().trim().toLowerCase();
            if (gender.equals("—á") || gender.equals("–∂")) break;
            System.out.println("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å \"—á\" –∞–±–æ \"–∂\".");
        }

        int birthYear;
        while (true) {
            System.out.print("–†—ñ–∫ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è: ");
            birthYear = getIntInput();
            if (birthYear > 1900 && birthYear <= 2025) break;
            System.out.println("–ù–µ–≤—ñ—Ä–Ω–∏–π —Ä—ñ–∫ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è. –í–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–∏–π —Ä—ñ–∫ —É –º–µ–∂–∞—Ö 1900-2025.");
        }

        System.out.println("\n1. –ö–∞–Ω–¥–∏–¥–∞—Ç–∞ –ø—ñ–¥—Ç—Ä–∏–º–∞–≤ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç.");
        System.out.println("2. –ö–∞–Ω–¥–∏–¥–∞—Ç–∞ –ø—ñ–¥—Ç—Ä–∏–º–∞–ª–∞ –æ–ø–æ–∑–∏—Ü—ñ–π–Ω–∞ –ø–∞—Ä—Ç—ñ—è.");
        System.out.println("3. –û–ø–æ–∑–∏—Ü—ñ–π–Ω–∏–π –∫–∞–Ω–¥–∏–¥–∞—Ç.");
        System.out.println("4. –ñ–æ–¥–µ–Ω –∑ –ø–µ—Ä–µ–ª—ñ—á–µ–Ω–∏—Ö.");
        System.out.print("–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é: ");

        int choice = getIntInput();
        int popularityIndex = switch (choice) {
            case 1 -> 70;
            case 2 -> 15;
            case 3 -> 10;
            case 4 -> 5;
            default -> {
                System.out.println("–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
                yield 0;
            }
        };

        String photoPath = gender.equals("—á") ? "images/man.jpg" : "images/woman.jpg";

        String sql = "INSERT INTO majors (surname, name, patronymic, birthplace, gender, birth_year, index_popularity, photo_path) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";

        try (Connection conn = DataBaseManager.connect(); PreparedStatement pstmt = conn.prepareStatement(sql)) {
            pstmt.setString(1, surname);
            pstmt.setString(2, name);
            pstmt.setString(3, patronymic);
            pstmt.setString(4, birthplace);
            pstmt.setString(5, gender);
            pstmt.setInt(6, birthYear);
            pstmt.setInt(7, popularityIndex);
            pstmt.setString(8, photoPath);
            pstmt.executeUpdate();
            System.out.println("–ö–∞–Ω–¥–∏–¥–∞—Ç–∞ –¥–æ–¥–∞–Ω–æ!");
        } catch (SQLException e) {
            System.out.println("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞: " + e.getMessage());
        }
    }

    private static void deleteMajorBySurname() {
        authorizeAccess();
        System.out.print("–í–≤–µ–¥—ñ—Ç—å –ø—Ä—ñ–∑–≤–∏—â–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞, —è–∫–æ–≥–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–¥–∞–ª–∏—Ç–∏: ");
        String surnameToDelete = scanner.nextLine().trim();

        String sql = "DELETE FROM majors WHERE surname = ?";
        try (Connection conn = DataBaseManager.connect();
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setString(1, surnameToDelete);
            int affectedRows = pstmt.executeUpdate();

            if (affectedRows > 0) {
                System.out.println("–ö–∞–Ω–¥–∏–¥–∞—Ç–∞ —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ.");
            } else {
                System.out.println("–ö–∞–Ω–¥–∏–¥–∞—Ç–∞ –∑ —Ç–∞–∫–∏–º –ø—Ä—ñ–∑–≤–∏—â–µ–º –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.");
            }

        } catch (SQLException e) {
            System.out.println("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞: " + e.getMessage());
        }
    }

    private static void printTableFromDB() {
        String sql = "SELECT * FROM majors";

        try (Connection conn = DataBaseManager.connect();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            System.out.println("\nüìã –°–ø–∏—Å–æ–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç—ñ–≤:");
            while (rs.next()) {
                System.out.printf(" %s %s %s, %s, %s, %d —Ä.–Ω., –ü–æ–ø—É–ª—è—Ä–Ω—ñ—Å—Ç—å: %d, –§–æ—Ç–æ: %s\n",
                        rs.getString("surname"),
                        rs.getString("name"),
                        rs.getString("patronymic"),
                        rs.getString("birthplace"),
                        rs.getString("gender"),
                        rs.getInt("birth_year"),
                        rs.getInt("index_popularity"),
                        rs.getString("photo_path"));
            }

        } catch (SQLException e) {
            System.out.println("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–≤–µ–¥–µ–Ω–Ω—ñ –∫–∞–Ω–¥–∏–¥–∞—Ç—ñ–≤: " + e.getMessage());
        }
    }

    private static int getIntInput() {
        while (true) {
            try {
                return Integer.parseInt(scanner.nextLine().trim());
            } catch (NumberFormatException e) {
                System.out.print("–ü–æ–º–∏–ª–∫–∞! –í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ: ");
            }
        }
    }
}
